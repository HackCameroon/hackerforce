# Generated by Django 2.1.1 on 2019-07-03 07:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contacts', '0007_contact_primary'),
        ('companies', '0006_company_email_exclude'),
        ('hackathons', '0013_auto_20190702_0649'),
    ]

    operations = [
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contacted_selection', models.CharField(blank=True, choices=[('U', 'Uncontacted'), ('C1', 'Contacted <= 1'), ('C2', 'Contacted <= 2'), ('C0', 'Contacted > 0')], max_length=10)),
                ('size_selection', models.CharField(blank=True, choices=[('S', 'Small'), ('M', 'Medium'), ('L', 'Large')], max_length=10)),
                ('primary_selection', models.CharField(blank=True, choices=[('P', 'Primary'), ('NP', 'Not-Primary')], max_length=10)),
                ('subject', models.CharField(help_text='Enter an email subject', max_length=100)),
                ('body', models.TextField(help_text='Enter the message body')),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('draft', 'Draft'), ('scheduled', 'Scheduled')], max_length=10)),
                ('time_scheduled', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('time_sent', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('last_update', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emails', to=settings.AUTH_USER_MODEL)),
                ('hackathon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emails', to='hackathons.Hackathon')),
                ('to_companies', models.ManyToManyField(blank=True, null=True, related_name='email_templates', to='companies.Company')),
                ('to_contacts', models.ManyToManyField(blank=True, null=True, related_name='email_templates', to='contacts.Contact')),
                ('to_industries', models.ManyToManyField(blank=True, null=True, to='companies.Industry')),
            ],
        ),
    ]
